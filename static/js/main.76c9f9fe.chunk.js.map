{"version":3,"sources":["components/FeedbackBadJoke.js","components/FeedbackNoJoke.js","components/Thanks.js","components/ThanksClassifer.js","components/GeneratorModel.js","components/ClassifierModel.js","components/Home.js","components/EvaluationProcess.js","App.js","serviceWorker.js","index.js"],"names":["FeedbackBadJoke","props","state","loading","result","trigger","searchInputTimeout","setTimeout","sendfeedback","then","myresponse","console","log","triggerNextStep","this","tosend","history","steps","model","axios","create","httpsAgent","https","Agent","rejectUnauthorized","strictSSL","post","feedbackURL","response","data","catch","err","React","Component","FeedbackNoJoke","FEEDBACK_URL","Thanks","instance","feedbackurl","ThanksClassifier","GeneratorModel","stopTimer","CheckIdleTime","bind","trigfunc","previousStep","topic","message","sample","Object","keys","topicdict","getRandomKeyword","includes","getKeyword","push","makeprediction","next_step","startTimer","value","length","url","interval","window","setInterval","clearInterval","_idleSecondsCounter","defaultProps","undefined","array","Math","floor","random","ClassifierModel","joke","Home","context","style","className","to","textDecoration","color","padding","src","EvaluationProcess","BASE_URL","CLASS_URL","process","NODE_TLS_REJECT_UNAUTHORIZED","stepsfrommodelblind","URL","id","options","label","user","component","waitAction","asMessage","delay","href","stepsfrommodel","App","path","width","botAvatar","userAvatar","enableMobileAutoFocus","headerComponent","class","align","fontSize","fontFamily","paddingLeft","contentStyle","height","botDelay","userDelay","exact","Boolean","location","hostname","match","ReactDOM","render","theme","background","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontSize","botFontColor","userBubbleColor","userFontColor","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"yPAgDeA,E,kDA1CX,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAACC,SAAS,EAAMC,OAAQ,kBAAC,UAAD,MAAaC,SAAS,GAC3D,EAAKC,mBAAqBC,YAAW,WAAO,EAAKC,aAAaP,GAAOQ,MACnE,SAAAC,GACEC,QAAQC,IAAIF,GACV,EAAKR,MAAME,OAAS,2BAC1B,EAAKH,MAAMY,uBAGV,KAVgB,E,qDAajB,OAAQC,KAAKZ,MAAME,S,mCAGRH,GACX,IAAIc,EAAS,CACX,UAAcD,KAAKb,MAAMe,QACzB,SAAaf,EAAMgB,MAAM,iBAAZ,QACf,MAASH,KAAKb,MAAMiB,OASpB,OAPiBC,IAAMC,OAAO,CAC5BC,WAAY,IAAIC,IAAMC,MAAM,CAC1BC,oBAAoB,EACpBC,WAAW,MAICC,KAAKZ,KAAKb,MAAM0B,YAAYZ,GAC3CN,MAAK,SAASmB,GAGb,OAFAjB,QAAQC,IAAIgB,EAASC,MACrBf,KAAKb,MAAMe,QAAU,GACdY,EAASC,QAEjBC,OAAM,SAAAC,GAAG,OAAEpB,QAAQC,IAAImB,U,GApCAC,IAAMC,WC2CnBC,E,kDA1Cb,WAAYjC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAACC,SAAS,EAAMC,OAAQ,kBAAC,UAAD,MAAaC,SAAS,GAC3D,EAAKC,mBAAqBC,YAAW,WAAO,EAAKC,aAAaP,GAAOQ,MACnE,SAAAC,GACEC,QAAQC,IAAIF,GACV,EAAKR,MAAME,OAAS,2BAC1B,EAAKH,MAAMY,uBAGV,KAVgB,E,qDAajB,OAAQC,KAAKZ,MAAME,S,mCAGRH,GACX,IAAIc,EAAS,CACX,UAAcD,KAAKb,MAAMe,QACzB,SAAaf,EAAMgB,MAAM,eAAZ,QACf,MAASH,KAAKb,MAAMiB,OAUpB,OARiBC,IAAMC,OAAO,CAC5BC,WAAY,IAAIC,IAAMC,MAAM,CAC1BC,oBAAoB,EACpBC,WAAW,MAKCC,KAAKZ,KAAKb,MAAMkC,aAAapB,GAC5CN,MAAK,SAASmB,GAGb,OAFAjB,QAAQC,IAAIgB,EAASC,MACrBf,KAAKb,MAAMe,QAAU,GACdY,EAASC,QAEjBC,OAAM,SAAAC,GAAG,OAAEpB,QAAQC,IAAImB,U,GArCDC,IAAMC,WCkDpBG,E,kDAjDX,WAAYnC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAACC,SAAS,EAAMC,OAAQ,kBAAC,UAAD,MAAaC,SAAS,GAC3D,EAAKC,mBAAqBC,YAAW,WAAO,EAAKC,aAAaP,GAAOQ,MACnE,SAAAC,GACEC,QAAQC,IAAIF,GACkC,iBAAxCT,EAAMgB,MAAN,oBACA,EAAKf,MAAME,OAAS,gEAGpBO,QAAQC,IAAIX,EAAMgB,MAAN,qBACZ,EAAKf,MAAME,OAAS,+EAE9B,EAAKH,MAAMY,uBAGV,KAhBgB,E,qDAmBjB,OAAQC,KAAKZ,MAAME,S,mCAGRH,GACX,IAAIc,EAAS,CACX,KAAS,WACT,UAAcD,KAAKb,MAAMe,QACzB,SAAYf,EAAMgB,MAAN,oBACZ,MAAUH,KAAKb,MAAMiB,OAEjBmB,EAAWlB,IAAMC,OAAO,CAC5BC,WAAY,IAAIC,IAAMC,MAAM,CAC1BC,oBAAoB,EACpBC,WAAW,MAKf,OAFHd,QAAQC,IAAI,YACdD,QAAQC,IAAIE,KAAKb,MAAMqC,aACXD,EAASX,KAAKZ,KAAKb,MAAMqC,YAAYvB,GAC3CN,MAAK,SAASmB,GAGb,OAFAjB,QAAQC,IAAIgB,EAASC,MAEdD,EAASC,QAEjBC,OAAM,SAAAC,GAAG,OAAEpB,QAAQC,IAAImB,U,GA5CTC,IAAMC,WC2CZM,E,kDA1CX,WAAYtC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAACC,SAAS,EAAMC,OAAQ,kBAAC,UAAD,MAAaC,SAAS,GAC3D,EAAKC,mBAAqBC,YAAW,WAAO,EAAKC,aAAaP,GAAOQ,MACnE,SAAAC,GACEC,QAAQC,IAAIF,GACZ,EAAKR,MAAME,OAAS,4BACpB,EAAKH,MAAMY,uBAGd,KAVgB,E,qDAajB,OAAQC,KAAKZ,MAAME,S,mCAGRH,GACX,IAAIc,EAAS,CACX,KAAS,aACT,UAAcD,KAAKb,MAAMe,QACzB,SAAaf,EAAMgB,MAAN,iCAEToB,EAAWlB,IAAMC,OAAO,CAC5BC,WAAY,IAAIC,IAAMC,MAAM,CAC1BC,oBAAoB,EACpBC,WAAW,MAKf,OAFHd,QAAQC,IAAI,YACdD,QAAQC,IAAIE,KAAKb,MAAMqC,aACXD,EAASX,KAAKZ,KAAKb,MAAMqC,YAAYvB,GAC3CN,MAAK,SAASmB,GAGb,OAFAjB,QAAQC,IAAIgB,EAASC,MAEdD,EAASC,QAEjBC,OAAM,SAAAC,GAAG,OAAEpB,QAAQC,IAAImB,U,GArCCC,IAAMC,W,QCE/BO,E,kDACF,WAAYvC,GAAQ,IAAD,uBACjB,cAAMA,IACDwC,YACL,EAAKC,cAAc,EAAKA,cAAcC,KAAnB,gBACnB,EAAKzC,MAAQ,CAACC,SAAS,EAAMC,OAAQ,kBAAC,UAAD,MAAaC,SAAS,EAAOuC,SAAU,EAAK3C,MAAMY,iBACvFF,QAAQC,IAAIX,EAAM4C,cAElB,IAAIC,EAAQ7C,EAAM4C,aAAaE,QAPd,MAQF,WAAVD,EACHA,EAsGD,WACH,IAAIA,EAAQE,EAAOC,OAAOC,KAAKC,IAC/B,OAAOH,EAAOG,EAAUL,IAxGZM,GAEDH,OAAOC,KAAKC,GAAWE,SAASP,KACvCA,EAwGD,SAAoBA,GACvB,OAAOE,EAAOG,EAAUL,IAzGZQ,CAAWR,IAGrB,EAAK7C,MAAMe,QAAQuC,KAAKT,GACxB,EAAKxC,mBAAqBC,YAAW,WAAO,EAAKiD,iBAAiB/C,MAChE,SAAAC,GAEA,IAAI+C,EADJ,EAAKxD,MAAMe,QAAQuC,KAAK7C,GAEL,mDAAfA,GACN,EAAKR,MAAME,OAAS,6GACpBqD,EAAY,eACe,4BAAf/C,GACR,EAAKR,MAAME,OAAS,oFACpBqD,EAAY,gBAGZ,EAAKvD,MAAME,OAASM,EAClB+C,EAAY,WAEhB,EAAKC,aACL/C,QAAQC,IAAI,QACZ,EAAKX,MAAMY,gBAAgB,CAAE8C,MAAOF,EAAYpD,QAASoD,SAE1D,KAnCgB,E,6DAuCjB,IAAI1C,EAAS,CACX,QAAYD,KAAKb,MAAMe,QAAQF,KAAKb,MAAMe,QAAQ4C,OAAO,IAErDvB,EAAWlB,IAAMC,OAAO,CAC5BC,WAAY,IAAIC,IAAMC,MAAM,CAC1BC,oBAAoB,EACpBC,WAAW,MAKf,OAFLd,QAAQC,IAAI,OACZD,QAAQC,IAAIE,KAAKb,MAAM4D,KACXxB,EAASX,KAAKZ,KAAKb,MAAM4D,IAAI9C,GACnCN,MAAK,SAASmB,GACb,OAAOA,EAASC,QAEjBC,OAAM,SAAAC,GAAG,OAAEpB,QAAQC,IAAImB,Q,+BAIxB,OAAOjB,KAAKZ,MAAME,S,mCAGpBU,KAAKgD,SAAWC,OAAOC,YAAYlD,KAAK4B,cAAe,O,kCAIvDqB,OAAOE,cAAcnD,KAAKgD,Y,sCAGxBhD,KAAKoD,sBAEDpD,KAAKoD,qBAxEI,KA0EXpD,KAAKoD,oBAAsB,O,GAzENlC,IAAMC,WAmFjCO,EAAe2B,aAAe,CAC5BlD,WAAOmD,EACPvD,qBAAiBuD,GAEN5B,QAYFW,EAAY,CACrB,qBAVU,CAAE,QAAS,OAAQ,KAAM,MAAO,OAAQ,MAAO,MAAM,MAAM,OAAO,aAAa,QAAQ,QAAQ,OAAO,OAAO,WAAW,SAAS,OAAO,QAAQ,UAAU,WAAW,QAAQ,QAAQ,QAAQ,QAAQ,eAAe,MAAM,eAWpO,oBATU,CAAC,OAAO,MAAM,SAAS,QAAQ,SAAS,SAAS,UAAU,QAAQ,OAAO,SAAS,OAAO,OAAO,QAAQ,SAAS,OAAO,SAAS,QAAQ,SAAS,MAAM,MAAM,QAAQ,QAAQ,WAAW,YAAY,OAAO,MAAM,QAAQ,WAAW,QAAQ,YAAY,QAAQ,QAAQ,OAAO,UAAU,MAAM,QAAQ,SAAS,OAAO,QAAQ,MAAM,SAAS,QAAQ,SAAS,QAAQ,UAAU,cAU7X,sBARW,CAAE,QAAU,aAAe,WAAa,SAAW,WAAa,QAAU,OAAS,MAAQ,OAAS,MAAQ,YAAc,UAAY,WAAa,UAAY,SAAW,UAAY,cAAgB,UAAY,QAAU,OAAS,WAAa,MAAQ,MAAQ,OAS7Q,sBARW,CAAC,SAAU,UAAW,QAAS,SAAU,WAAY,OAAQ,OAAQ,UAAW,UAAW,OAAQ,WAAY,UAAW,SAAU,OAAQ,WAAY,YAAa,WAAY,SAAU,SAAU,aAAc,YAAa,UAAW,aAAc,UAAW,aAAc,WAAY,QASzS,qBAPU,CAAC,oBAAqB,cAAe,QAAS,UAAW,WAUvE,SAASH,EAAOqB,GACZ,OAAOA,EAAMC,KAAKC,MAAMD,KAAKE,SAASH,EAAMT,SC7GhD,IACMa,E,kDACF,WAAYxE,GAAQ,IAAD,uBACjB,cAAMA,IACDwC,YACL,EAAKC,cAAc,EAAKA,cAAcC,KAAnB,gBACnB,EAAKzC,MAAQ,CAACC,SAAS,EAAMC,OAAQ,kBAAC,UAAD,MAAaC,SAAS,EAAOuC,SAAU,EAAK3C,MAAMY,iBACvF,IAAI6D,EAAOzE,EAAM4C,aAAaE,QALb,OAMjB,EAAK9C,MAAMe,QAAQuC,KAAKmB,GACxB,EAAKpE,mBAAqBC,YAAW,WAAO,EAAKiD,iBAAiB/C,MAChE,SAAAC,GACA,EAAKT,MAAMe,QAAQuC,KAAK7C,GAExB,EAAKR,MAAME,OAASM,EAEpB,EAAKgD,aACL/C,QAAQC,IAAI,QACZ,EAAKX,MAAMY,gBAAgB,CAAE8C,MAHjB,mBAGoCtD,QAHpC,0BAKb,KAjBgB,E,6DAqBjB,IAAIU,EAAS,CACX,QAAYD,KAAKb,MAAMe,QAAQF,KAAKb,MAAMe,QAAQ4C,OAAO,IAErDvB,EAAWlB,IAAMC,OAAO,CAC5BC,WAAY,IAAIC,IAAMC,MAAM,CAC1BC,oBAAoB,EACpBC,WAAW,MAKf,OAFLd,QAAQC,IAAI,OACZD,QAAQC,IAAIE,KAAKb,MAAM4D,KACXxB,EAASX,KAAKZ,KAAKb,MAAM4D,IAAI9C,GACnCN,MAAK,SAASmB,GACb,OAAOA,EAASC,QAEjBC,OAAM,SAAAC,GAAG,OAAEpB,QAAQC,IAAImB,Q,+BAIxB,OAAOjB,KAAKZ,MAAME,S,mCAGpBU,KAAKgD,SAAWC,OAAOC,YAAYlD,KAAK4B,cAAe,O,kCAIvDqB,OAAOE,cAAcnD,KAAKgD,Y,sCAGxBhD,KAAKoD,sBAEDpD,KAAKoD,qBAtDI,KAwDXpD,KAAKoD,oBAAsB,O,GAvDLlC,IAAMC,WAiElCwC,EAAgBN,aAAe,CAC7BlD,WAAOmD,EACPvD,qBAAiBuD,GAENK,QC0BAE,G,wDA5Fb,WAAY1E,EAAO2E,GAAU,uCACvB3E,EAAO2E,G,qDAId,OACK,yBAAKC,MAAQ,CAAC,QAAU,gBAEtB,6BAEC,yBAAKC,UAAU,QACb,6BACE,kBAAC,IAAD,CAAMC,GAAG,IAAIF,MAAO,CAAEG,eAAgB,OAAOC,MAAO,SAApD,SAEF,yBAAKH,UAAU,QACb,kBAAC,IAAD,CAAMC,GAAG,sBAAuBF,MAAO,CAAEG,eAAgB,OAAOC,MAAO,OAAQC,QAAS,gBAAxF,uBAEF,yBAAKL,MAAO,CAAEG,eAAgB,OAAQE,QAAS,gBAA/C,iBAkBH,yBAAKJ,UAAU,aACf,6BACE,yBAAKA,UAAY,WAIjB,yBAAKA,UAAU,SACb,qCACA,yBAAKA,UAAU,SAASK,IAAI,iBAI9B,yBAAKL,UAAU,WACb,wCACA,sGAGF,yBAAKA,UAAU,WACb,oCACA,wOAEF,yBAAKA,UAAU,WACb,4CACA,ySACA,oIACA,oIAKJ,yBAAKA,UAAU,UACZ,yBAAKA,UAAU,SAASK,IAAI,mDAC3B,yBAAKL,UAAU,qBACb,kBAAC,IAAD,CAAMC,GAAG,aACP,yBAAKD,UAAU,SAASK,IAAI,6B,GAtEzBnD,IAAMC,YC0GVmD,E,kDA1Gb,WAAYnF,EAAO2E,GAAU,uCACvB3E,EAAO2E,G,qDAId,OACK,yBAAKC,MAAQ,CAAC,QAAU,gBAEtB,6BAEC,yBAAKC,UAAU,QACb,6BACE,kBAAC,IAAD,CAAMC,GAAG,IAAIF,MAAO,CAAEG,eAAgB,OAAOC,MAAO,SAApD,SAEF,yBAAKH,UAAU,QACb,kBAAC,IAAD,CAAMC,GAAG,YAAaF,MAAO,CAAEG,eAAgB,OAAOC,MAAO,OAAQC,QAAS,gBAA9E,uBAEF,yBAAKL,MAAO,CAAEG,eAAgB,OAAQE,QAAS,gBAA/C,iBAkBH,yBAAKJ,UAAU,aACf,6BACE,yBAAKA,UAAY,WAIjB,yBAAKA,UAAU,SACb,kDACA,yBAAKA,UAAU,SAASK,IAAI,iBAI9B,yBAAKL,UAAU,WACb,4CACA,2CACA,oGACA,sDACA,yEACA,2JACA,6DACA,4DACA,0EAKF,yBAAKA,UAAU,WACb,6CACA,2CACA,uGACA,0DACA,gDACA,gJACA,iVACA,qGACA,uRACA,uDACA,qlBACA,wHACA,iKACA,mGACA,gGAGF,yBAAKA,UAAU,WACb,kDACA,0DACA,0cACA,yDACA,qLACA,4DACA,qO,GAvFoB9C,IAAMC,WCqBhCoD,EAAW,gCACXlD,EAAekD,EAAW,YAC1BC,EAAYD,EAAW,YAG7BE,yHAAYC,6BAA+B,IAoB3C,IAAIxE,EAAU,GAiDOgB,IAAMC,UA0E3B,SAASwD,EAAoBvE,GAC3B,IAAMwE,EAAML,EAAWnE,EAyQtB,MAxQW,CACV,CACGyE,GAAI,aACJ5C,QAAS,mDACT1C,QAAS,eAEZ,CACGsF,GAAI,cACN5C,QAAS,uEACJ1C,QAAS,iBAEf,CACCsF,GAAI,gBACJC,QAAQ,CACP,CAACjC,MAAO,eAAMkC,MAAO,eAAKxF,QAAQ,SACjC,CAACsD,MAAO,eAAMkC,MAAO,eAAKxF,QAAQ,QAClC,CAACsD,MAAO,eAAMkC,MAAO,eAAKxF,QAAQ,UAClC,CAACsD,MAAO,eAAMkC,MAAO,eAAKxF,QAAQ,WAClC,CAACsD,MAAO,eAAMkC,MAAO,eAAKxF,QAAQ,WAClC,CAACsD,MAAO,eAAMkC,MAAO,eAAKxF,QAAQ,cAClC,CAACsD,MAAO,eAAMkC,MAAO,eAAKxF,QAAQ,aAClC,CAACsD,MAAO,eAAMkC,MAAO,eAAKxF,QAAQ,UAClC,CAACsD,MAAO,eAAMkC,MAAO,eAAKxF,QAAQ,cAIpC,CACEsF,GAAI,QACJ5C,QAAS,6DACT1C,QAAS,UAEX,CACEsF,GAAI,OACJ5C,QAAS,uCACT1C,QAAS,UAEX,CACEsF,GAAI,SACJ5C,QAAS,6CACT1C,QAAS,UAEX,CACEsF,GAAI,UACJ5C,QAAS,6CACT1C,QAAS,UAEX,CACEsF,GAAI,UACJ5C,QAAS,6BACT1C,QAAS,UAEX,CACEsF,GAAI,SACJ5C,QAAS,OACT1C,QAAS,UAEX,CACEsF,GAAI,WACJ5C,QAAS,qBACT1C,QAAS,UAEX,CACEsF,GAAI,aACJ5C,QAAS,SACT1C,QAAS,UAEX,CACEsF,GAAI,YACJ5C,QAAS,OACT1C,QAAS,UAEX,CACEsF,GAAI,SACJ5C,QAAS,uFACT1C,QAAS,gBAEX,CACEsF,GAAI,eACHC,QAAQ,CAEP,CAACjC,MAAO,OAAQkC,MAAO,sCAAsCxF,QAAQ,aAErE,CAACsD,MAAO,OAAQkC,MAAO,OAAQxF,QAAS,eAI5C,CAAEsF,GAAI,YACJ5C,QAAS,uEACT1C,QAAS,gBAEX,CACEsF,GAAI,eACJC,QAAS,CACP,CAACjC,MAAO,QAASkC,MAAO,qBAAWxF,QAAQ,oBAC3C,CAACsD,MAAO,SAAUkC,MAAO,sBAAYxF,QAAQ,oBAC7C,CAACsD,MAAO,SAAUkC,MAAO,sBAAYxF,QAAQ,oBAC7C,CAACsD,MAAO,OAAQkC,MAAO,oBAAUxF,QAAQ,oBACzC,CAACsD,MAAO,QAASkC,MAAO,qBAAWxF,QAAQ,oBAC3C,CAACsD,MAAO,SAAUkC,MAAO,SAASxF,QAAQ,oBAC1C,CAACsD,MAAO,SAAUkC,MAAO,SAASxF,QAAQ,YAG9C,CACCsF,GAAI,SACJ5C,QAAS,4BACT1C,QAAS,QAEV,CACEsF,GAAI,OACJG,MAAM,EACNzF,QAAS,oBAEX,CACEsF,GAAI,mBACJI,UAAW,kBAAC,EAAD,CAAgB/E,QAASA,EAASE,MAAOA,EAAO2C,IAAK6B,IAEhEM,YAAY,EACZC,WAAW,GAEb,CACEN,GAAI,UACJ5C,QAAS,yDACT1C,QAAS,eAEX,CACEsF,GAAI,cACJC,QAAQ,CACN,CAACjC,MAAO,OAAQkC,MAAO,eAAKxF,QAAQ,UACpC,CAACsD,MAAO,MAAOkC,MAAO,eAAKxF,QAAQ,YAGvC,CACEsF,GAAI,SACJI,UAAW,kBAAC,EAAD,CAAQ/E,QAASA,EAASE,MAAOA,EAAOoB,YAAaH,IAChE8D,WAAW,EACXD,YAAY,EACZ3F,QAAS,eAGX,CACEsF,GAAI,cACJ5C,QAAQ,qCACR1C,QAAS,sBAEX,CACEsF,GAAI,qBACJC,QAAQ,CACN,CAACjC,MAAO,YAAakC,MAAO,OAAOxF,QAAQ,aAC3C,CAACsD,MAAO,KAAMkC,MAAO,MAAMxF,QAAQ,YAIvC,CACEsF,GAAI,WACJ5C,QAAS,4CACT1C,QAAS,aAEX,CACEsF,GAAI,YACJG,MAAM,EACNzF,QAAS,sBAEX,CACEsF,GAAI,qBACJI,UAAW,kBAAC,EAAD,CAAiB/E,QAASA,EAAS6C,IAAKyB,IAEnDU,YAAY,EACZC,WAAW,GAEb,CACEN,GAAI,mBACJ5C,QAAS,+BACT1C,QAAS,2BAEX,CACEsF,GAAI,0BACJC,QAAS,CACP,CAACjC,MAAO,eAAMkC,MAAO,eAAKxF,QAAQ,uBAClC,CAACsD,MAAO,eAAMkC,MAAO,eAAKxF,QAAQ,yBAGtC,CACEsF,GAAI,sBACJI,UAAW,kBAAC,EAAD,CAAkB/E,QAASA,EAASsB,YAAaH,IAC5D8D,WAAW,EACXD,YAAY,EACZ3F,QAAS,gBAEX,CACEsF,GAAI,eACJC,QAAS,CACP,CAACjC,MAAO,MAAOkC,MAAO,MAAMxF,QAAQ,UACpC,CAACsD,MAAO,MAAOkC,MAAO,MAAMxF,QAAQ,cAUxC,CACEsF,GAAI,eACJ5C,QAAS,sEACT1C,QAAS,QASZ,CACGsF,GAAI,cACJG,MAAM,EACNzF,QAAS,mBAEX,CACEsF,GAAI,kBACJI,UAAW,kBAAC,EAAD,CAAgB/E,QAASA,EAASE,MAAOA,EAAOoB,YAAaH,IACxE8D,WAAW,EACXD,YAAY,EACZ3F,QAAS,gBAEX,CACEsF,GAAI,mBACJI,UAAW,kBAAC,EAAD,CAAiB/E,QAASA,EAASE,MAAOA,EAAOoB,YAAaH,IACzE8D,WAAW,EACXD,YAAY,EACZ3F,QAAS,gBAEX,CACEsF,GAAI,gBACJ5C,QAAS,2EACT1C,QAAS,iBAEX,CACEsF,GAAI,gBACJG,MAAM,EACNzF,QAAS,oBAEV,CACCsF,GAAI,iBACJO,MAAO,KACPnD,QAAS,UACT1C,QAAS,UAEV,CACEsF,GAAI,YACPI,UAAa,kFAEVE,WAAW,GAGb,CACEN,GAAI,WACJI,UACG,uDAA4B,uBAAGI,KAAK,2BAAR,oBAA5B,KAEHF,WAAW,IAuBnB,SAASG,EAAelF,GACtB,IAAMwE,EAAML,EAAWnE,EA2QtB,MA1QW,CACV,CACGyE,GAAI,aACJ5C,QAAS,mDACT1C,QAAS,eAEZ,CACGsF,GAAI,cACN5C,QAAS,uEACJ1C,QAAS,iBAIf,CACCsF,GAAI,gBACJC,QAAQ,CACP,CAACjC,MAAO,eAAMkC,MAAO,eAAKxF,QAAQ,SACjC,CAACsD,MAAO,eAAMkC,MAAO,eAAKxF,QAAQ,QAClC,CAACsD,MAAO,eAAMkC,MAAO,eAAKxF,QAAQ,UAClC,CAACsD,MAAO,eAAMkC,MAAO,eAAKxF,QAAQ,WAClC,CAACsD,MAAO,eAAMkC,MAAO,eAAKxF,QAAQ,WAClC,CAACsD,MAAO,eAAMkC,MAAO,eAAKxF,QAAQ,cAClC,CAACsD,MAAO,eAAMkC,MAAO,eAAKxF,QAAQ,aAClC,CAACsD,MAAO,eAAMkC,MAAO,eAAKxF,QAAQ,UAClC,CAACsD,MAAO,eAAMkC,MAAO,eAAKxF,QAAQ,cAIpC,CACEsF,GAAI,QACJ5C,QAAS,6DACT1C,QAAS,UAEX,CACEsF,GAAI,OACJ5C,QAAS,uCACT1C,QAAS,UAEX,CACEsF,GAAI,SACJ5C,QAAS,6CACT1C,QAAS,UAEX,CACEsF,GAAI,UACJ5C,QAAS,6CACT1C,QAAS,UAEX,CACEsF,GAAI,UACJ5C,QAAS,2CACT1C,QAAS,UAEX,CACEsF,GAAI,SACJ5C,QAAS,OACT1C,QAAS,UAEX,CACEsF,GAAI,WACJ5C,QAAS,qBACT1C,QAAS,UAEX,CACEsF,GAAI,aACJ5C,QAAS,SACT1C,QAAS,UAEX,CACEsF,GAAI,YACJ5C,QAAS,OACT1C,QAAS,UAEX,CACEsF,GAAI,SACJ5C,QAAS,uFACT1C,QAAS,gBAEX,CACEsF,GAAI,eACHC,QAAQ,CAEP,CAACjC,MAAO,OAAQkC,MAAO,8BAAoBxF,QAAQ,aAEnD,CAACsD,MAAO,OAAQkC,MAAO,OAAQxF,QAAS,eAI5C,CAAEsF,GAAI,YACJ5C,QAAS,uEACT1C,QAAS,gBAEX,CACEsF,GAAI,eACJC,QAAS,CACP,CAACjC,MAAO,QAASkC,MAAO,qBAAWxF,QAAQ,oBAC3C,CAACsD,MAAO,SAAUkC,MAAO,sBAAYxF,QAAQ,oBAC7C,CAACsD,MAAO,SAAUkC,MAAO,sBAAYxF,QAAQ,oBAC7C,CAACsD,MAAO,OAAQkC,MAAO,oBAAUxF,QAAQ,oBACzC,CAACsD,MAAO,QAASkC,MAAO,qBAAWxF,QAAQ,oBAC3C,CAACsD,MAAO,SAAUkC,MAAO,SAASxF,QAAQ,oBAC1C,CAACsD,MAAO,SAAUkC,MAAO,SAASxF,QAAQ,YAG9C,CACCsF,GAAI,SACJ5C,QAAS,4BACT1C,QAAS,QAEV,CACEsF,GAAI,OACJG,MAAM,EACNzF,QAAS,oBAEX,CACEsF,GAAI,mBACJI,UAAW,kBAAC,EAAD,CAAgB/E,QAASA,EAASE,MAAOA,EAAO2C,IAAK6B,IAEhEM,YAAY,EACZC,WAAW,GAEb,CACEN,GAAI,UACJ5C,QAAS,kDACT1C,QAAS,eAEX,CACEsF,GAAI,cACJC,QAAQ,CACN,CAACjC,MAAO,OAAQkC,MAAO,eAAKxF,QAAQ,UACpC,CAACsD,MAAO,MAAOkC,MAAO,eAAKxF,QAAQ,YAGvC,CACEsF,GAAI,SACJI,UAAW,kBAAC,EAAD,CAAQ/E,QAASA,EAASE,MAAOA,EAAOoB,YAAaH,IAChE8D,WAAW,EACXD,YAAY,EACZ3F,QAAS,eAGX,CACEsF,GAAI,cACJ5C,QAAQ,qCACR1C,QAAS,sBAEX,CACEsF,GAAI,qBACJC,QAAQ,CACN,CAACjC,MAAO,YAAakC,MAAO,OAAOxF,QAAQ,aAC3C,CAACsD,MAAO,KAAMkC,MAAO,MAAMxF,QAAQ,YAIvC,CACEsF,GAAI,WACJ5C,QAAS,uCACT1C,QAAS,aAEX,CACEsF,GAAI,YACJG,MAAM,EACNzF,QAAS,sBAEX,CACEsF,GAAI,qBACJI,UAAW,kBAAC,EAAD,CAAiB/E,QAASA,EAAS6C,IAAKyB,IAEnDU,YAAY,EACZC,WAAW,GAEb,CACEN,GAAI,mBACJ5C,QAAS,+BACT1C,QAAS,2BAEX,CACEsF,GAAI,0BACJC,QAAS,CACP,CAACjC,MAAO,eAAMkC,MAAO,eAAKxF,QAAQ,uBAClC,CAACsD,MAAO,eAAMkC,MAAO,eAAKxF,QAAQ,yBAGtC,CACEsF,GAAI,sBACJI,UAAW,kBAAC,EAAD,CAAkB/E,QAASA,EAASsB,YAAaH,IAC5D8D,WAAW,EACXD,YAAY,EACZ3F,QAAS,gBAEX,CACEsF,GAAI,eACJC,QAAS,CACP,CAACjC,MAAO,MAAOkC,MAAO,MAAMxF,QAAQ,UACpC,CAACsD,MAAO,MAAOkC,MAAO,MAAMxF,QAAQ,cAUxC,CACEsF,GAAI,eACJ5C,QAAS,kEACT1C,QAAS,QASZ,CACGsF,GAAI,cACJG,MAAM,EACNzF,QAAS,mBAEX,CACEsF,GAAI,kBACJI,UAAW,kBAAC,EAAD,CAAgB/E,QAASA,EAASE,MAAOA,EAAOoB,YAAaH,IACxE8D,WAAW,EACXD,YAAY,EACZ3F,QAAS,gBAEX,CACEsF,GAAI,mBACJI,UAAW,kBAAC,EAAD,CAAiB/E,QAASA,EAASE,MAAOA,EAAOoB,YAAaH,IACzE8D,WAAW,EACXD,YAAY,EACZ3F,QAAS,gBAEX,CACEsF,GAAI,gBACJ5C,QAAS,sEACT1C,QAAS,iBAEX,CACEsF,GAAI,gBACJG,MAAM,EACNzF,QAAS,oBAEV,CACCsF,GAAI,iBACJO,MAAO,KACPnD,QAAS,UACT1C,QAAS,UAEV,CACEsF,GAAI,YACPI,UAAa,mFAEVE,WAAW,GAGb,CACEN,GAAI,WACJI,UACG,uDAA4B,uBAAGI,KAAK,2BAAR,oBAA5B,KAEHF,WAAW,IAoGJI,MA7Ff,WACE,OACG,yBAAKvB,UAAU,OACX,kBAAC,IAAD,KAEA,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOwB,KAAK,mBACV,6BACN,kBAAC,IAAD,CAASC,MAAM,OAAOC,UAAU,uBAAuBC,WAAW,uBAAuBC,sBAAsB,OAAOzF,MAAOwE,EAAoB,sBAAuBkB,gBACtK,yBAAKC,MAAM,UACX,yBAAKzB,IAAI,uBAAuB0B,MAAM,SACtC,wBAAIhC,MAAO,CAAEiC,SAAU,OAAQC,WAAY,aAA3C,aACA,uBAAGlC,MAAO,CAAEiC,SAAU,OAAQC,WAAY,YAAaC,YAAc,OAArE,qCAEDC,aAAc,CAAEC,OAAQ,QAAUrC,MAAO,CAAEqC,OAAQ,QAAUC,SAAU,EAAGC,UAAW,QAK1E,kBAAC,IAAD,KACR,kBAAC,IAAD,CAAOd,KAAK,mBACV,6BACN,kBAAC,IAAD,CAASC,MAAM,OAAOC,UAAU,uBAAuBC,WAAW,uBAAuBC,sBAAsB,OAAOzF,MAAOwE,EAAoB,aAAckB,gBAC7J,yBAAKC,MAAM,UACX,yBAAKzB,IAAI,uBAAuB0B,MAAM,SACtC,wBAAIhC,MAAO,CAAEiC,SAAU,OAAQC,WAAY,aAA3C,aACA,uBAAGlC,MAAO,CAAEiC,SAAU,OAAQC,WAAY,YAAaC,YAAc,OAArE,mCAEDC,aAAc,CAAEC,OAAQ,QAAUrC,MAAO,CAAEqC,OAAQ,QAAUC,SAAU,EAAGC,UAAW,QAMjF,kBAAC,IAAD,KACD,kBAAC,IAAD,CAAOd,KAAK,aACV,6BACN,kBAAC,IAAD,CAASC,MAAM,OAAOC,UAAU,uBAAuBC,WAAW,uBAAuBC,sBAAsB,OAAOzF,MAAOmF,EAAe,sBAAuBO,gBACjK,yBAAKC,MAAM,UACX,yBAAKzB,IAAI,uBAAuB0B,MAAM,SACtC,wBAAIhC,MAAO,CAAEiC,SAAU,OAAQC,WAAY,aAA3C,aACA,uBAAGlC,MAAO,CAAEiC,SAAU,OAAQC,WAAY,YAAaC,YAAc,OAArE,uCAEDC,aAAc,CAAEC,OAAQ,QAAUrC,MAAO,CAAEqC,OAAQ,QAAUC,SAAU,EAAGC,UAAW,QAK1E,kBAAC,IAAD,KACR,kBAAC,IAAD,CAAOd,KAAK,aACV,6BACN,kBAAC,IAAD,CAASC,MAAM,OAAOC,UAAU,uBAAuBC,WAAW,uBAAuBC,sBAAsB,OAAOzF,MAAOmF,EAAe,aAAcO,gBACxJ,yBAAKC,MAAM,UACX,yBAAKzB,IAAI,uBAAuB0B,MAAM,SACtC,wBAAIhC,MAAO,CAAEiC,SAAU,OAAQC,WAAY,aAA3C,aACA,uBAAGlC,MAAO,CAAEiC,SAAU,OAAQC,WAAY,YAAaC,YAAc,OAArE,qCAEDC,aAAc,CAAEC,OAAQ,QAAUrC,MAAO,CAAEqC,OAAQ,QAAUC,SAAU,EAAGC,UAAW,QAK1E,kBAAC,IAAD,KACT,kBAAC,IAAD,CAAOC,OAAK,EAACf,KAAO,sBAAsBP,UAAWX,KAIrD,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOiC,OAAK,EAACf,KAAO,IAAIP,UAAWpB,QCvxBxB2C,QACW,cAA7BvD,OAAOwD,SAASC,UAEe,UAA7BzD,OAAOwD,SAASC,UAEhBzD,OAAOwD,SAASC,SAASC,MACvB,2D,YCMNC,IAASC,OACR,kBAAC,gBAAD,CAAeC,MAlBD,CACXC,WAAY,UACZd,WAAY,iBACZe,cAAe,UACfC,gBAAiB,OACjBC,eAAgB,OAChBC,eAAgB,UAChBC,YAAa,QACbC,aAAc,UACdC,gBAAiB,UACjBC,cAAe,YASd,kBAAC,EAAD,OAEHC,SAASC,eAAe,SDuGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjI,MAAK,SAAAkI,GACJA,EAAaC,gBAEd9G,OAAM,SAAA+G,GACLlI,QAAQkI,MAAMA,EAAM9F,a","file":"static/js/main.76c9f9fe.chunk.js","sourcesContent":["import React from 'react';\nimport '../App.css';\nimport {Loading} from 'react-simple-chatbot';\nimport axios from 'axios'\nimport https from 'https'\nclass FeedbackBadJoke extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {loading: true, result: <Loading />, trigger: false};\n      this.searchInputTimeout = setTimeout(() => {this.sendfeedback(props).then(\n        myresponse => {\n          console.log(myresponse);\n            this.state.result = 'Thanks for the feedback!';\n      this.props.triggerNextStep();\n      //this.refresh();\n        });\n    }, 400);\n    }\n    render() {\n      return (this.state.result);\n    }\n  \n    sendfeedback(props) {\n      var tosend = {\n        \"joketuple\" : this.props.history,\n        'feedback' : props.steps['user-feedback']['message'],\n      'model': this.props.model,\n      }\n      const instance = axios.create({\n        httpsAgent: new https.Agent({  \n          rejectUnauthorized: false,\n          strictSSL: false\n        })\n      });\n  \n      return instance.post(this.props.feedbackURL,tosend)\n      .then(function(response) {\n        console.log(response.data);\n        this.props.history = [];\n        return response.data;\n      })\n      .catch(err=>console.log(err))\n    }\n    //refresh() {\n    //  window.location.replace(myURL);\n    //}\n}\n\nexport default FeedbackBadJoke;","import React from 'react';\nimport '../App.css';\nimport {Loading} from 'react-simple-chatbot';\nimport axios from 'axios'\nimport https from 'https'\nclass FeedbackNoJoke extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {loading: true, result: <Loading />, trigger: false};\n      this.searchInputTimeout = setTimeout(() => {this.sendfeedback(props).then(\n        myresponse => {\n          console.log(myresponse);\n            this.state.result = 'Thanks for the feedback!';\n      this.props.triggerNextStep();\n      //this.refresh();\n        });\n    }, 400);\n    }\n    render() {\n      return (this.state.result);\n    }\n  \n    sendfeedback(props) {\n      var tosend = {\n        \"joketuple\" : this.props.history,\n        'feedback' : props.steps['user-nojoke']['message'],\n      'model': this.props.model,\n      }\n      const instance = axios.create({\n        httpsAgent: new https.Agent({  \n          rejectUnauthorized: false,\n          strictSSL: false\n        })\n      });\n  \n  \n      return instance.post(this.props.FEEDBACK_URL,tosend)\n      .then(function(response) {\n        console.log(response.data);\n        this.props.history = [];\n        return response.data;\n      })\n      .catch(err=>console.log(err))\n    }\n    //refresh() {\n    //  window.location.replace(myURL);\n    //}\n  }\n  export default FeedbackNoJoke;","import React from 'react';\nimport '../App.css';\nimport {Loading} from 'react-simple-chatbot';\nimport axios from 'axios'\nimport https from 'https'\nclass Thanks extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {loading: true, result: <Loading />, trigger: false};\n      this.searchInputTimeout = setTimeout(() => {this.sendfeedback(props).then(\n        myresponse => {\n          console.log(myresponse);\n            if (props.steps['goodoptions']['message']==='😍') {\n                this.state.result = '(~˘▾˘)~ That’s great! Glad you liked it!';\n            }\n            else{\n                console.log(props.steps['goodoptions']['message'])\n                this.state.result = 'I’ll try harder next time… ᕙ(⇀‸↼‶)ᕗ';\n            }\n      this.props.triggerNextStep();\n      //this.refresh();\n        });\n    }, 400);\n    }\n    render() {\n      return (this.state.result);\n    }\n  \n    sendfeedback(props) {\n      var tosend = {\n        \"type\" : 'generate',\n        \"joketuple\" : this.props.history,\n        'feedback' :props.steps['goodoptions']['message'],\n        'model' : this.props.model\n      }\n      const instance = axios.create({\n        httpsAgent: new https.Agent({  \n          rejectUnauthorized: false,\n          strictSSL: false\n        })\n      });\n  \tconsole.log('feedback');\n\tconsole.log(this.props.feedbackurl);\n      return instance.post(this.props.feedbackurl,tosend)\n      .then(function(response) {\n        console.log(response.data);\n        //this.props.history = [];\n        return response.data;\n      })\n      .catch(err=>console.log(err))\n    }\n    //refresh() {\n    //  window.location.replace(myURL);\n    //}\n  }\nexport default Thanks;\n","import React from 'react';\nimport '../App.css';\nimport {Loading} from 'react-simple-chatbot';\nimport axios from 'axios'\nimport https from 'https'\nclass ThanksClassifier extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {loading: true, result: <Loading />, trigger: false};\n      this.searchInputTimeout = setTimeout(() => {this.sendfeedback(props).then(\n        myresponse => {\n          console.log(myresponse);\n          this.state.result = 'Do you have another joke?';\n          this.props.triggerNextStep();\n      //this.refresh();\n        });\n    }, 400);\n    }\n    render() {\n      return (this.state.result);\n    }\n  \n    sendfeedback(props) {\n      var tosend = {\n        \"type\" : 'classifier',\n        \"joketuple\" : this.props.history,\n        'feedback' : props.steps['classifier_eval_options']['message']\n      }\n      const instance = axios.create({\n        httpsAgent: new https.Agent({  \n          rejectUnauthorized: false,\n          strictSSL: false\n        })\n      });\n  \tconsole.log('feedback');\n\tconsole.log(this.props.feedbackurl);\n      return instance.post(this.props.feedbackurl,tosend)\n      .then(function(response) {\n        console.log(response.data);\n        //this.props.history = [];\n        return response.data;\n      })\n      .catch(err=>console.log(err))\n    }\n    //refresh() {\n    //  window.location.replace(myURL);\n    //}\n  }\nexport default ThanksClassifier;\n","import React from 'react';\nimport '../App.css';\nimport {Loading} from 'react-simple-chatbot';\nimport axios from 'axios'\nimport https from 'https'\nimport PropTypes from 'prop-types';\nvar IDLE_TIMEOUT = 30;\nclass GeneratorModel extends React.Component{\n    constructor(props) {\n      super(props);\n      this.stopTimer();\n      this.CheckIdleTime=this.CheckIdleTime.bind(this);\n      this.state = {loading: true, result: <Loading />, trigger: false, trigfunc: this.props.triggerNextStep};\n      console.log(props.previousStep)\n      //decide \n      var topic = props.previousStep.message\n      if ( topic === 'Random'){\n        topic = getRandomKeyword()\n      }\n      else if (Object.keys(topicdict).includes(topic)) {\n        topic = getKeyword(topic)\n      }\n\n      this.props.history.push(topic);\n      this.searchInputTimeout = setTimeout(() => {this.makeprediction().then(\n        myresponse => {\n        this.props.history.push(myresponse);\n        var next_step;\n        if (myresponse === \"Sorry I don't have a joke about that right now\"){\n      this.state.result = 'There was no joke returned. Can you please suggest a joke for us? If you can\\'t think of one please type no' \n      next_step = 'user-nojoke';\n        } else if(myresponse === \"Joke is not appropriate\"){\n          this.state.result = 'The keyword you typed in is not appropriate. Please type a more appropriate joke.' \n          next_step = 'user-nojoke';\n        }\n        else {\n          this.state.result = myresponse;\n            next_step = 'quality';\n        }\n        this.startTimer();\n        console.log('here')\n        this.props.triggerNextStep({ value: next_step , trigger: next_step} );\n      });\n    }, 400);\n    }\n  \n    makeprediction(){\n      var tosend = {\n        \"history\" : this.props.history[this.props.history.length-1],\n      }\n      const instance = axios.create({\n        httpsAgent: new https.Agent({  \n          rejectUnauthorized: false,\n          strictSSL: false\n        })\n      });\n\tconsole.log('IRL'); \n\tconsole.log(this.props.url);\n      return instance.post(this.props.url,tosend)\n      .then(function(response) {\n        return response.data;\n      })\n      .catch(err=>console.log(err))\n    }\n  \n    render() {\n      return(this.state.result);\n    }\n  startTimer() {\n    this.interval = window.setInterval(this.CheckIdleTime, 1000);\n  }\n  \n  stopTimer() {\n    window.clearInterval(this.interval);\n  }\n  CheckIdleTime() {\n      this._idleSecondsCounter++;\n      //console.log(_idleSecondsCounter)\n      if (this._idleSecondsCounter >= IDLE_TIMEOUT) {\n        //this.props.triggerNextStep({value : 'yes', trigger: 'start1'});\n        this._idleSecondsCounter = 0;\n      }\n  }\n  }\n\n  GeneratorModel.propTypes = {\n    previousStep: PropTypes.object,\n    triggerNextStep: PropTypes.func,\n  };\n  \n  GeneratorModel.defaultProps = {\n    steps: undefined,\n    triggerNextStep: undefined,\n  };\nexport default GeneratorModel;\n\n\nconst music = [ 'music', 'beat', 'DJ', 'pop', 'sing', 'hip', 'hop','rap','rock','instrument','heavy','metal','song','band','composer','artist','drum','piano','trumpet','trombone','organ','scale','choir','Elvis','Taylor Swift','BTS','Post Malone' ]\n\nconst food =  ['food','eat','walnut','apple','banana','orange','pancake','toast','meat','potato','mayo','soup','bagel','noodle','chip','cereal','candy','cookie','egg','ice','cream','honey','mushroom','hamburger','meal','pie','pizza','sandwich','snack','vegetable','fruit','bacon','corn','coconut','jam','jelly','peanut','cake','salsa','nut','cheese','sugar','butter','steak','burrito','french fry' ];\n\nconst sports = [ 'sport',  'basketball',  'football',  'soccer',  'baseball',  'score',  'ball',  'bat',  'hoop',  'box',  'wrestling',  'running',  'Olympics',  'skating',  'hockey',  'cricket',  'quarterback',  'stadium',  'court',  'fans',  'softball',  'NBA',  'NFL',  'MLS' ];\nconst school = [\"school\", \"college\", \"ruler\", \"pencil\", \"homework\", \"test\", \"quiz\", \"science\", \"english\", \"math\", \"calculus\", \"algebra\", \"campus\", \"debt\", \"graduate\", \"sophomore\", \"freshman\", \"junior\", \"senior\", \"university\", \"professor\", \"teacher\", \"instructor\", \"faculty\", \"fraternity\", \"roommate\", \"loan\"];\n\nconst covid = ['social distancing', 'coronavirus', 'covid', 'vaccine', 'online']\n\nexport const topicdict = {\n    'Music 🎵': music,\n    'Food 🍕': food,\n    'Sports 🏀': sports,\n    'School 📝': school,\n    'COVID 🤢': covid\n};\n\nfunction sample(array) {\n    return array[Math.floor(Math.random()*array.length)]\n\n}\n\nexport function getRandomKeyword() {\n    var topic = sample(Object.keys(topicdict))\n    return sample(topicdict[topic]);\n}\n\nexport function getKeyword(topic) {\n    return sample(topicdict[topic]);\n}\n","import React from 'react';\nimport '../App.css';\nimport {Loading} from 'react-simple-chatbot';\nimport axios from 'axios'\nimport https from 'https'\nimport PropTypes from 'prop-types';\nvar IDLE_TIMEOUT = 30;\nclass ClassifierModel extends React.Component{\n    constructor(props) {\n      super(props);\n      this.stopTimer();\n      this.CheckIdleTime=this.CheckIdleTime.bind(this);\n      this.state = {loading: true, result: <Loading />, trigger: false, trigfunc: this.props.triggerNextStep};\n      var joke = props.previousStep.message\n      this.props.history.push(joke);\n      this.searchInputTimeout = setTimeout(() => {this.makeprediction().then(\n        myresponse => {\n        this.props.history.push(myresponse);\n        var next_step;\n        this.state.result = myresponse;\n        next_step = 'classifier_agree';\n        this.startTimer();\n        console.log('here')\n        this.props.triggerNextStep({ value: next_step , trigger: next_step} );\n      });\n    }, 400);\n    }\n  \n    makeprediction(){\n      var tosend = {\n        \"history\" : this.props.history[this.props.history.length-1],\n      }\n      const instance = axios.create({\n        httpsAgent: new https.Agent({  \n          rejectUnauthorized: false,\n          strictSSL: false\n        })\n      });\n\tconsole.log('IRL'); \n\tconsole.log(this.props.url);\n      return instance.post(this.props.url,tosend)\n      .then(function(response) {\n        return response.data;\n      })\n      .catch(err=>console.log(err))\n    }\n  \n    render() {\n      return(this.state.result);\n    }\n  startTimer() {\n    this.interval = window.setInterval(this.CheckIdleTime, 1000);\n  }\n  \n  stopTimer() {\n    window.clearInterval(this.interval);\n  }\n  CheckIdleTime() {\n      this._idleSecondsCounter++;\n      //console.log(_idleSecondsCounter)\n      if (this._idleSecondsCounter >= IDLE_TIMEOUT) {\n        //this.props.triggerNextStep({value : 'yes', trigger: 'start1'});\n        this._idleSecondsCounter = 0;\n      }\n  }\n  }\n\n  ClassifierModel.propTypes = {\n    previousStep: PropTypes.object,\n    triggerNextStep: PropTypes.func,\n  };\n  \n  ClassifierModel.defaultProps = {\n    steps: undefined,\n    triggerNextStep: undefined,\n  };\nexport default ClassifierModel;","import React from \"react\";\nimport \"./Home.css\";\n\nimport {\n  Link\n} from \"react-router-dom\";\n\n\n\nclass Home extends React.Component {\n  constructor(props, context) {\n\t\tsuper(props, context);\n\t}\n\trender() {\n\n\treturn (\n      <div style= {{'padding':'0% 5% 5% 5%' }}>\n\n        <nav>\n\n         <div className=\"menu\">\n           <div>\n             <Link to=\"/\" style={{ textDecoration: 'none',color: '#000' }}>Home</Link>\n           </div>\n           <div className=\"push\">\n             <Link to=\"/evaluation_process\"  style={{ textDecoration: 'none',color: '#000', padding: \"0% 0% 0% 0%\" }}>Evaluation Process</Link>\n           </div>  \n           <div style={{ textDecoration: 'none', padding: \"0% 0% 0% 2%\" }}>\n             Publication\n           </div>\n         </div>\n\n        \n        </nav>\n\n       {/*} <h2>HELLO</h2>\n        <p>Cras facilisis urna ornare ex volutpat, et\n        convallis erat elementum. Ut aliquam, ipsum vitae\n        gravida suscipit, metus dui bibendum est, eget rhoncus nibh\n        metus nec massa. Maecenas hendrerit laoreet augue\n        nec molestie. Cum sociis natoque penatibus et magnis\n        dis parturient montes, nascetur ridiculus mus.</p>\n \n        <p>Duis a turpis sed lacus dapibus elementum sed eu lectus.</p>*/}\n        \n        <div className=\"container\">\n        <div>\n          <div className = \"navbar\">\n\n          \n          </div>\n          <div className=\"title\">\n            <p>EDDIE </p>\n            <img className=\"button\" src=\"profile.png\"/>\n            {/*<h5><u>Evaluation Process </u></h5>*/}\n          </div>\n\n          <div className=\"section\">\n            <h2>Overview</h2>\n            <p>EDDIE is a chatbot that generates jokes based on a user given keyword.</p>\n          </div>\n         \n          <div className=\"section\">\n            <h2>Goal</h2>\n            <p>This chatbot was developed with the purpose of increasing the existing amount of available jokes and also help improve the mental health of college students by providing an interactive joke generator.</p>\n          </div>\n          <div className=\"section\">\n            <h2>How it works</h2>\n            <p>Eddie uses two separate models to make provide the joke: Generator model and Retrieval model. The generator model uses our own algorithm to generate the joke from the keywords. The retrieval model retrieves the best joke that relates closest to the keyword inputted.</p>\n            <p>Joke candidates and keywords first go through a toxicity filter in order to maximize user experience.</p>\n            <p>Afterward, several joke candidates are generated and our joke classifier picks the best to display.</p>\n          </div>\n        </div>\n\n        {/*<img className=\"container__image\" src=\"https://mtdata.ru/u7/photo53A0/20946911428-0/original.jpg#20946911428\"  border=\"1px\"/>*/}\n        <div className=\"button\">\n          {<img className=\"button\" src=\"Apple iPad Air 2020 Space Gray Landscape 1.png\"/>}\n            <div className=\"container__button\">\n              <Link to=\"/generate\">\n                <img className=\"button\" src=\"Rectangle 3.png\"/>\n              </Link>\n            </div>\n        </div>\n        </div>\n        {/*<img  src=\"Apple iPad Air 2020 Space Gray Landscape 1.png\"  border=\"1px\"/>*/}\n\n        \n       \n\n        \n\n\n        {/* <Link to=\"/bot\">\n            <button type=\"button\">\n                  Click Me!\n            </button>\n        </Link> */}\n      </div>\n    );\n    }\n}\n\nexport default Home;","import React from \"react\";\nimport \"./Home.css\";\nimport {\n  Link\n} from \"react-router-dom\";\n\n\n\nclass EvaluationProcess extends React.Component {\n  constructor(props, context) {\n\t\tsuper(props, context);\n\t}\n\trender() {\n\n\treturn (\n      <div style= {{'padding':'0% 5% 5% 5%' }}>\n\n        <nav>\n\n         <div className=\"menu\">\n           <div>\n             <Link to=\"/\" style={{ textDecoration: 'none',color: '#000' }}>Home</Link>\n           </div>\n           <div className=\"push\">\n             <Link to=\"/generate\"  style={{ textDecoration: 'none',color: '#000', padding: \"0% 0% 0% 0%\" }}>Evaluation Process</Link>\n           </div>  \n           <div style={{ textDecoration: 'none', padding: \"0% 0% 0% 2%\" }}>\n             Publication\n           </div>\n         </div>\n\n        \n        </nav>\n\n       {/*} <h2>HELLO</h2>\n        <p>Cras facilisis urna ornare ex volutpat, et\n        convallis erat elementum. Ut aliquam, ipsum vitae\n        gravida suscipit, metus dui bibendum est, eget rhoncus nibh\n        metus nec massa. Maecenas hendrerit laoreet augue\n        nec molestie. Cum sociis natoque penatibus et magnis\n        dis parturient montes, nascetur ridiculus mus.</p>\n \n        <p>Duis a turpis sed lacus dapibus elementum sed eu lectus.</p>*/}\n        \n        <div className=\"container\">\n        <div>\n          <div className = \"navbar\">\n\n          \n          </div>\n          <div className=\"title\">\n            <p>Evaluation Process </p>\n            <img className=\"button\" src=\"profile.png\"/>\n            {/*<h5><u>Evaluation Process </u></h5>*/}\n          </div>\n\n          <div className=\"section\">\n            <h2>Expert Study</h2>\n            <h4>Goal ⛳</h4>\n            <p>Evaluate the quality of the joke based on expert knowledge of humor. </p>\n            <h4>Procedure 📝</h4>\n            <p>The study is going to be a moderated one. </p>\n            <p>Since we are interested in evaluating the quality of the joke being generated, we use the generator as the backend of EDDIE.</p>\n            <p>1 the \"funniness\" of the joke </p>\n            <p>2 the complexity of the humor</p>\n            <p>3 the grammatical correctness of the jokes</p>\n\n          </div>\n\n\n          <div className=\"section\">\n            <h2>General Study</h2>\n            <h4>Goal ⛳</h4>\n            <p>Evaluate how humorous the jokes are and the impact on the mental health.</p>\n            <h4>Participants 👥 </h4>\n            <p>College Students </p>\n            <p>1 Regular Group: Whether the backend design is a generator or a retrieval model is not known to the participants.</p>\n            <p>1.1 Before the study, we provide the following information to the participants: EDDIE is a chatbot that provides jokes. It will ask you to provide a keyword for which it is going to present a related jokes. The jokes may not necessarily be humorous, and how funny the jokes are is up to your discernment.  </p>\n            <p>2 Blind Group: The backend model will not be known to the participant.</p>\n            <p>2.1 Before the study, we provide the following information to the participants: EDDIE is a text generation AI. It will ask you to provide a keyword for which it will present related text. Please tell us if you think any of the responses are funny. </p>\n            <h4>Procedure 📝 </h4>\n            <p>There are two main groups: Regular and Blind Group. Within each of these groups, there are two subgroups: Generator and Retrieval groups. Knowing that the produced sentences are jokes may influence the subjects to perceive that the sentences are more humorous, so we keep the blind group, for which we do not specify that the sentences are jokes. Also, we want to test the effectiveness of our two main model types so we divide each of the main groups into subgroups. The participants will be in a moderated study where they will be given survey questions to answer.</p>\n            <p>1 Regular Group: This group will be provided with an introduction of Eddie and its goals.</p>\n            <p>2 Blind Group: This group will not be provided the goals of Eddie. The introduction will describe it as a text generating chatbot.</p>\n            <p>3 Generator Group: This group will use use the Generator based model</p>\n            <p>4 Retrieval Group: This group will use the Retrieval based model</p>\n          </div>\n\n          <div className=\"section\">\n            <h2>Storage Procedure </h2>\n            <h4>Google forms 📝 </h4>\n            <p>We will have participants fill out a google forms sheet during the moderated session in order to gauge feedback. The only personal information we record is the self-described mental state before interacting with the bot and after interacting with the bot. Form results will automatically be collected and stored on a Google Sheets spreadsheet. Only approved researchers will have access to this password-protected spreadsheet. </p>\n            <h4>Google docs 📝 </h4>\n            <p>We will write extra notes of our study on a password-protected Google Docs. Only researchers approved in this study will have access to this document.</p>\n            <h4>Bot's Meta Data 📝</h4>\n            <p>EDDIE's backend runs on a secure AWS server. All usage is logged on that server and will only stay on that server in a local database. Both the database and the server are password-protected</p>\n          </div>\n        </div>\n\n        {/*<img className=\"container__image\" src=\"https://mtdata.ru/u7/photo53A0/20946911428-0/original.jpg#20946911428\"  border=\"1px\"/>*/}\n\n\n\n\n        {/* <Link to=\"/bot\">\n            <button type=\"button\">\n                  Click Me!\n            </button>\n        </Link> */}\n      </div>\n      </div>\n    );\n    }\n}\n\nexport default EvaluationProcess;","import React from 'react';\n\n\n\nimport {\n  // BrowserRouter as Router,\n   HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nimport './App.css';\n//import PropTypes from 'prop-types';\nimport ChatBot from 'react-simple-chatbot';\n//import axios from 'axios'\n//import https from 'https'\nimport Button from '@material-ui/core/Button';\n//import Typography from '@material-ui/core/Typography';\nimport FeedbackBadJoke from './components/FeedbackBadJoke.js'\nimport FeedbackNoJoke from './components/FeedbackNoJoke.js'\nimport Thanks from './components/Thanks.js'\nimport ThanksClassifier from './components/ThanksClassifer.js'\nimport GeneratorModel from './components/GeneratorModel.js'\nimport ClassifierModel from './components/ClassifierModel.js'\nimport Home from './components/Home.js'\nimport EvaluationProcess from './components/EvaluationProcess.js'\n\nconst BASE_URL = \"https://raspi.brrrr.live:4242\" \nconst FEEDBACK_URL = BASE_URL + \"/feedback\"\nconst CLASS_URL = BASE_URL + \"/classify\"\n//const myURL = \"https://greetez.com:3000\"\n\nprocess.env.NODE_TLS_REJECT_UNAUTHORIZED = '0';\n//const uuidv4 = require('uuid/v4');\n//const myuuid = uuidv4();\n\n// var IDLE_TIMEOUT = 30; //seconds\n// var _idleSecondsCounter = 0;\n// var interval;\n// window.onkeydown = function() {\n//   _idleSecondsCounter = 0;\n// };\n// window.onkeyup = function() {\n//   _idleSecondsCounter = 0;\n// };\n// window.onkeypress = function() {\n//   _idleSecondsCounter = 0;\n// };\n// window.oninput = function() {\n//   _idleSecondsCounter = 0;\n// };\n\nvar history = [];\n\n//pick a model\n// const models = [\"/generate_gpt2_ind\", \"/generate_dialogpt2\", \"/generate_pipeline\"];\n// const model = models[Math.floor(Math.random()*models.length)];\n// const URL = BASE_URL + model;\n// console.log(FEEDBACK_URL);\n\n// console.log(model);\n//var start = ['What are you doing today?', 'What are you doing right now?', 'What\\'s up?', 'How are you today?', 'What do you like to do?', 'How are you?']\n\n//class FeedbackButton extends React.Component {\n//  constructor(props) {\n//    super(props)\n//  }\n//  render() {\n//    return (\n//      <Button variant=\"contained\" size=\"small\" color=\"default\" onClick={() => \n//        { \n//            window.clearInterval(interval); \n//            this.props.triggerNextStep({value : 'yes', trigger: 'feedback-form'});\n//      }}>\n//              Wrong Response? Click Me!\n//      </Button>\n//    );\n//  }\n//}\n//\n//class NewTopic extends React.Component {\n//  constructor(props) {\n//    super(props);\n//    this.state = {result: <Loading />};\n//    this.state.result = this.getRandomStart();\n//    this.props.triggerNextStep();\n//  }\n//  getRandomInt(max) {\n//    return Math.floor(Math.random() * Math.floor(max));\n//  }\n//  getRandomStart(){\n//    const message = start[this.getRandomInt(start.length)];\n//    history[history.length -1] = history[history.length -1] + ' ' + message;\n//    //console.log('message');\n//    return(message);\n//  }\n//  render() {\n//    return(this.state.result)\n//  }\n//}\n\nclass Survey extends React.Component{\n    constructor(props) {\n        super(props);\n    }\n\t componentDidMount() {\n      if (typeof window !== 'undefined') {\n           window.location.href = \"http://google.com\";\n      }\n }\n    render() {\n\treturn (<div></div>)\n    }\n}\n\n\n//class Interfacer extends React.Component{\n//  constructor(props) {\n//    super(props);\n//    this.stopTimer();\n//    this.CheckIdleTime=this.CheckIdleTime.bind(this);\n//    this.state = {loading: true, result: <Loading />, trigger: false, trigfunc: this.props.triggerNextStep};\n//    history.push(props.previousStep.message);\n//    this.searchInputTimeout = setTimeout(() => {this.makeprediction().then(\n//      myresponse => {\n//      this.state.result = myresponse;\n//      history.push(myresponse);\n//      this.startTimer();\n//      this.props.triggerNextStep();\n//    });\n//  }, 400);\n//  }\n//\n//  makeprediction(){\n//    var tosend = {\n//      \"history\" : history.slice(-(2*10+1)),\n//      \"device\" : \"cpu\",\n//      \"top_p\" : 0.0,\n//      \"top_k\" : 10,\n//      \"temperature\" : 1,\n//      \"id\" : myuuid\n//    }\n//    const instance = axios.create({\n//      httpsAgent: new https.Agent({  \n//        rejectUnauthorized: false,\n//        strictSSL: false\n//      })\n//    });\n//\n//    return instance.post(URL,tosend)\n//    .then(function(response) {\n//      return response.data;\n//    })\n//    .catch(err=>console.log(err))\n//  }\n//\n//  render() {\n//    return(this.state.result);\n//  }\n//startTimer() {\n//  interval = window.setInterval(this.CheckIdleTime, 1000);\n//}\n//\n//stopTimer() {\n//  window.clearInterval(interval);\n//}\n//CheckIdleTime() {\n//    _idleSecondsCounter++;\n//    //console.log(_idleSecondsCounter)\n//    if (_idleSecondsCounter >= IDLE_TIMEOUT) {\n//      //this.props.triggerNextStep({value : 'yes', trigger: 'start1'});\n//      _idleSecondsCounter = 0;\n//    }\n//}\n//}\nfunction stepsfrommodelblind(model) {\n  const URL = BASE_URL + model;\n  var steps = [\n    {\n       id: 'startemoji',\n       message: 'Hey there! This is Eddie  (•◡•) /',\n       trigger: 'startemoji2'\n     },\n    {\n       id: 'startemoji2',\n     message: 'Hope you are having a great day! How would you rate your mood today?',\n          trigger: 'emoji-buttons' \n    },\n    {\n     id: 'emoji-buttons',\n     options:[\n      {value: '😩', label: '😩',trigger:'crazy'}, //😓\n       {value: '😱', label: '😱',trigger:'ohno'},\n       {value: '😭', label: '😭',trigger:'crying'},\n       {value: '🙁', label: '🙁',trigger:'unhappy'},\n       {value: '😞', label: '😞',trigger:'worried'},\n       {value: '🙃', label: '🙃',trigger:'upsidedown'},\n       {value: '😕', label: '😕',trigger:'uncertain'},\n       {value: '😊', label: '😊',trigger:'smiley'},\n       {value: '😆', label: '😆',trigger:'laughing'}\n     ]\n   },\n   \n     {\n       id: 'crazy',\n       message: 'Oh no! Well my week has been quite rough too. We got this!',\n       trigger: 'tellme'\n     },\n     {\n       id: 'ohno',\n       message: 'Honestly relatable, but we got this!',\n       trigger: 'tellme'\n     },\n     {\n       id: 'crying',\n       message: 'Aww, maybe I can help make you feel better',\n       trigger: 'tellme'\n     },\n     {\n       id: 'unhappy',\n       message: 'Aww, maybe I can help make you feel better',\n       trigger: 'tellme'\n     },\n     {\n       id: 'worried',\n       message: 'I hope I can cheer you up!',\n       trigger: 'tellme'\n     },\n     {\n       id: 'smiley',\n       message: 'Yay!',\n       trigger: 'tellme'\n     },\n     {\n       id: 'laughing',\n       message: 'Glad to hear that!',\n       trigger: 'tellme'\n     },\n     {\n       id: 'upsidedown',\n       message: 'Oh no!',\n       trigger: 'tellme'\n     },\n     {\n       id: 'uncertain',\n       message: 'Hmm.',\n       trigger: 'tellme'\n     },\n     {\n       id: 'tellme',\n       message: 'Tell me what you want to do today (づ｡◕‿‿◕｡)づ',\n       trigger: 'task_options',\n     },  \n     {\n       id: 'task_options',\n        options:[\n         //{value: 'game', label: 'Play a game 🎮',trigger:'jokestart'},\n         {value: 'joke', label: 'Generate a sentence from a keyword.',trigger:'jokestart'},\n         //{value: 'judge', label: 'Judge my joke ⚖️',trigger:'ask_joke'}, \n         {value: 'exit', label: 'Exit', trigger: 'exit_game'}\n   \n       ]\n     },\n     { id: 'jokestart',\n       message: 'Alright! Just pick a topic for me! ヾ(⌐■_■)ノ',\n       trigger: 'topicoptions'    \n     },\n     {\n       id: 'topicoptions',\n       options: [\n         {value: 'music', label: 'Music 🎵',trigger:'message-returner'},\n         {value: 'sports', label: 'Sports 🏀',trigger:'message-returner'},\n         {value: 'school', label: 'School 📝',trigger:'message-returner'},\n         {value: 'food', label: 'Food 🍕',trigger:'message-returner'},\n         {value: 'covid', label: 'COVID 🤢',trigger:'message-returner'},\n         {value: 'random', label: 'Random',trigger:'message-returner'},\n         {value: 'custom', label: 'Custom',trigger:'custom'}\n       ]\n     },\n     {\n      id: 'custom',\n      message: 'What’s your keyword?',\n      trigger: 'user'    \n     },\n     {\n       id: 'user',\n       user: true,\n       trigger: 'message-returner',\n     },\n     {\n       id: 'message-returner',\n       component: <GeneratorModel history={history} model={model} url={URL}/>,\n      // trigger: 'quality',\n       waitAction: true,\n       asMessage: true\n     },\n     {\n       id: 'quality',\n       message: 'Did you like the sentence(s)?? \\ (•◡•) /',\n       trigger: 'goodoptions'    \n     }, \n     {\n       id: 'goodoptions',\n       options:[\n         {value: 'good', label: '😍',trigger:'thanks'},\n         {value: 'bad', label: '😩',trigger:'thanks'}\n       ],    \n     },\n     {\n       id: 'thanks',\n       component: <Thanks history={history} model={model} feedbackurl={FEEDBACK_URL} />,\n       asMessage: true,\n       waitAction: true,\n       trigger: 'anotherjoke'\n     },\n   \n     {\n       id: 'anotherjoke',\n       message:'Do you want me to make more stuff?',\n       trigger: 'anotherjokeoptions'\n     },\n     {\n       id: 'anotherjokeoptions',\n       options:[\n         {value: 'jokestart', label: 'Sure',trigger:'jokestart'},\n         {value: 'no', label: 'Nah',trigger:'tellme'}\n       ]\n     },\n   // BEGIN HUMOR CLASSIFIER SCRIPT\n     {\n       id: 'ask_joke',\n       message: 'What’s your statement?? 🤩',\n       trigger: 'user_joke'\n     },\n     {\n       id: 'user_joke',\n       user: true,\n       trigger: 'message_classifier'\n     },\n     {\n       id: 'message_classifier',\n       component: <ClassifierModel history={history} url={CLASS_URL}/>,\n      // trigger: 'quality',\n       waitAction: true,\n       asMessage: true\n     },\n     {\n       id: 'classifier_agree',\n       message: 'Do you agree with the score?',\n       trigger: 'classifier_eval_options'\n     }, \n     {\n       id: 'classifier_eval_options',\n       options: [\n         {value: '😤', label: '😤',trigger:'classifier_feedback'},\n         {value: '😆', label: '😆',trigger:'classifier_feedback'}\n       ]\n     },\n     {\n       id: 'classifier_feedback',\n       component: <ThanksClassifier history={history} feedbackurl={FEEDBACK_URL} />,\n       asMessage: true,\n       waitAction: true,\n       trigger: 'want_another'\n     },\n     {\n       id: 'want_another',\n       options: [\n         {value: 'nah', label: 'nah',trigger:'tellme'},\n         {value: 'yea', label: 'yea',trigger:'ask_joke'}\n       ]\n     },\n   \n   \n     //{\n     //  id: 'start0',\n     //  message: 'Hello there! Please type a keyword and I will write a joke based on it',\n     //  trigger: 'user',\n     //},\n     {\n       id: 'continue new',\n       message: 'Please type another keyword and I will write a sentence based on it',\n       trigger: 'user',\n     },\n   //  {\n   //    id: 'start1',\n   //    component: <NewTopic />,\n   //    asMessage: true,\n   //    waitAction: true,\n   //    trigger: 'user',\n   //  },\n    {\n       id: 'user-nojoke',\n       user: true,\n       trigger: 'feedback-nojoke',\n     },\n     {\n       id: 'feedback-nojoke',\n       component: <FeedbackNoJoke history={history} model={model} feedbackurl={FEEDBACK_URL}/>,\n       asMessage: true,\n       waitAction: true,\n       trigger: 'continue new'\n     },\n     {\n       id: 'feedback-badjoke',\n       component: <FeedbackBadJoke history={history} model={model} feedbackurl={FEEDBACK_URL}/>,\n       asMessage: true,\n       waitAction: true,\n       trigger: 'continue new'\n     },\n     {\n       id: 'feedback-form',\n       message: 'Please tell me a something better (hit enter if you can\\'t think of one).',\n       trigger: 'user-feedback'\n     },\n     {\n       id: 'user-feedback',\n       user: true,\n       trigger: 'feedback-badjoke'\n     },\n      {\n       id: 'thanks-message',\n       delay: 1500,\n       message: 'Thanks!',\n       trigger: 'thanks'\n      }, \n      {\n        id: 'exit_game',\n     component: ( <div> It's time to say goodbye, hope to see you again.</div>\n     ),\n        asMessage: true,\n   \n      },\n      {\n        id: 'exitlink',\n        component: (\n           <div> Link Doesn't work yet <a href=\"https://www.google.com/\">Take the Survey:</a> </div>\n         ),\n        asMessage: true,\n      }\n   ];\n   return steps\n}\n\n\n\n\n\n//Interfacer.propTypes = {\n//  previousStep: PropTypes.object,\n//  triggerNextStep: PropTypes.func,\n//};\n//\n//Interfacer.defaultProps = {\n//  steps: undefined,\n//  triggerNextStep: undefined,\n//};\n//\n//\n//\n//\nfunction stepsfrommodel(model) {\n  const URL = BASE_URL + model;\n  var steps = [\n    {\n       id: 'startemoji',\n       message: 'Hey there! This is Eddie  (•◡•) /',\n       trigger: 'startemoji2'\n     },\n    {\n       id: 'startemoji2',\n     message: 'Hope you are having a great day! How would you rate your mood today?',\n          trigger: 'emoji-buttons'\n    \n    \n    },\n    {\n     id: 'emoji-buttons',\n     options:[\n      {value: '😩', label: '😩',trigger:'crazy'}, //😓\n       {value: '😱', label: '😱',trigger:'ohno'},\n       {value: '😭', label: '😭',trigger:'crying'},\n       {value: '🙁', label: '🙁',trigger:'unhappy'},\n       {value: '😞', label: '😞',trigger:'worried'},\n       {value: '🙃', label: '🙃',trigger:'upsidedown'},\n       {value: '😕', label: '😕',trigger:'uncertain'},\n       {value: '😊', label: '😊',trigger:'smiley'},\n       {value: '😆', label: '😆',trigger:'laughing'}\n     ]\n   },\n   \n     {\n       id: 'crazy',\n       message: 'Oh no! Well my week has been quite rough too. We got this!',\n       trigger: 'tellme'\n     },\n     {\n       id: 'ohno',\n       message: 'Honestly relatable, but we got this!',\n       trigger: 'tellme'\n     },\n     {\n       id: 'crying',\n       message: 'Aww, maybe I can help make you feel better',\n       trigger: 'tellme'\n     },\n     {\n       id: 'unhappy',\n       message: 'Aww, maybe I can help make you feel better',\n       trigger: 'tellme'\n     },\n     {\n       id: 'worried',\n       message: 'I hope I can cheer you up with my jokes!',\n       trigger: 'tellme'\n     },\n     {\n       id: 'smiley',\n       message: 'Yay!',\n       trigger: 'tellme'\n     },\n     {\n       id: 'laughing',\n       message: 'Glad to hear that!',\n       trigger: 'tellme'\n     },\n     {\n       id: 'upsidedown',\n       message: 'Oh no!',\n       trigger: 'tellme'\n     },\n     {\n       id: 'uncertain',\n       message: 'Hmm.',\n       trigger: 'tellme'\n     },\n     {\n       id: 'tellme',\n       message: 'Tell me what you want to do today (づ｡◕‿‿◕｡)づ',\n       trigger: 'task_options',\n     },  \n     {\n       id: 'task_options',\n        options:[\n         //{value: 'game', label: 'Play a game 🎮',trigger:'jokestart'},\n         {value: 'joke', label: 'Give me a joke 🤣',trigger:'jokestart'},\n         //{value: 'judge', label: 'Judge my joke ⚖️',trigger:'ask_joke'}, \n         {value: 'exit', label: 'Exit', trigger: 'exit_game'}\n   \n       ]\n     },\n     { id: 'jokestart',\n       message: 'Alright! Just pick a topic for me! ヾ(⌐■_■)ノ',\n       trigger: 'topicoptions'\t  \n     },\n     {\n       id: 'topicoptions',\n       options: [\n         {value: 'music', label: 'Music 🎵',trigger:'message-returner'},\n         {value: 'sports', label: 'Sports 🏀',trigger:'message-returner'},\n         {value: 'school', label: 'School 📝',trigger:'message-returner'},\n         {value: 'food', label: 'Food 🍕',trigger:'message-returner'},\n         {value: 'covid', label: 'COVID 🤢',trigger:'message-returner'},\n         {value: 'random', label: 'Random',trigger:'message-returner'},\n         {value: 'custom', label: 'Custom',trigger:'custom'}\n       ]\n     },\n     {\n      id: 'custom',\n      message: 'What’s your keyword?',\n      trigger: 'user'\t  \n     },\n     {\n       id: 'user',\n       user: true,\n       trigger: 'message-returner',\n     },\n     {\n       id: 'message-returner',\n       component: <GeneratorModel history={history} model={model} url={URL}/>,\n      // trigger: 'quality',\n       waitAction: true,\n       asMessage: true\n     },\n     {\n       id: 'quality',\n       message: 'Did you like the joke?? \\ (•◡•) /',\n       trigger: 'goodoptions'\t  \n     }, \n     {\n       id: 'goodoptions',\n       options:[\n         {value: 'good', label: '😍',trigger:'thanks'},\n         {value: 'bad', label: '😩',trigger:'thanks'}\n       ],\t  \n     },\n     {\n       id: 'thanks',\n       component: <Thanks history={history} model={model} feedbackurl={FEEDBACK_URL} />,\n       asMessage: true,\n       waitAction: true,\n       trigger: 'anotherjoke'\n     },\n   \n     {\n       id: 'anotherjoke',\n       message:'Do you want me to make more jokes?',\n       trigger: 'anotherjokeoptions'\n     },\n     {\n       id: 'anotherjokeoptions',\n       options:[\n         {value: 'jokestart', label: 'Sure',trigger:'jokestart'},\n         {value: 'no', label: 'Nah',trigger:'tellme'}\n       ]\n     },\n   // BEGIN HUMOR CLASSIFIER SCRIPT\n     {\n       id: 'ask_joke',\n       message: 'What’s your joke?? 🤩',\n       trigger: 'user_joke'\n     },\n     {\n       id: 'user_joke',\n       user: true,\n       trigger: 'message_classifier'\n     },\n     {\n       id: 'message_classifier',\n       component: <ClassifierModel history={history} url={CLASS_URL}/>,\n      // trigger: 'quality',\n       waitAction: true,\n       asMessage: true\n     },\n     {\n       id: 'classifier_agree',\n       message: 'Do you agree with the score?',\n       trigger: 'classifier_eval_options'\n     }, \n     {\n       id: 'classifier_eval_options',\n       options: [\n         {value: '😤', label: '😤',trigger:'classifier_feedback'},\n         {value: '😆', label: '😆',trigger:'classifier_feedback'}\n       ]\n     },\n     {\n       id: 'classifier_feedback',\n       component: <ThanksClassifier history={history} feedbackurl={FEEDBACK_URL} />,\n       asMessage: true,\n       waitAction: true,\n       trigger: 'want_another'\n     },\n     {\n       id: 'want_another',\n       options: [\n         {value: 'nah', label: 'nah',trigger:'tellme'},\n         {value: 'yea', label: 'yea',trigger:'ask_joke'}\n       ]\n     },\n   \n   \n     //{\n     //  id: 'start0',\n     //  message: 'Hello there! Please type a keyword and I will write a joke based on it',\n     //  trigger: 'user',\n     //},\n     {\n       id: 'continue new',\n       message: 'Please type another keyword and I will write a joke based on it',\n       trigger: 'user',\n     },\n   //  {\n   //    id: 'start1',\n   //    component: <NewTopic />,\n   //    asMessage: true,\n   //    waitAction: true,\n   //    trigger: 'user',\n   //  },\n    {\n       id: 'user-nojoke',\n       user: true,\n       trigger: 'feedback-nojoke',\n     },\n     {\n       id: 'feedback-nojoke',\n       component: <FeedbackNoJoke history={history} model={model} feedbackurl={FEEDBACK_URL}/>,\n       asMessage: true,\n       waitAction: true,\n       trigger: 'continue new'\n     },\n     {\n       id: 'feedback-badjoke',\n       component: <FeedbackBadJoke history={history} model={model} feedbackurl={FEEDBACK_URL}/>,\n       asMessage: true,\n       waitAction: true,\n       trigger: 'continue new'\n     },\n     {\n       id: 'feedback-form',\n       message: 'Please tell me a better joke (hit enter if you can\\'t think of one).',\n       trigger: 'user-feedback'\n     },\n     {\n       id: 'user-feedback',\n       user: true,\n       trigger: 'feedback-badjoke'\n     },\n      {\n       id: 'thanks-message',\n       delay: 1500,\n       message: 'Thanks!',\n       trigger: 'thanks'\n      }, \n      {\n        id: 'exit_game',\n     component: ( <div> It's time to say goodbye, hope to see you again. </div>\n     ),\n        asMessage: true,\n   \n      },\n      {\n        id: 'exitlink',\n        component: (\n           <div> Link Doesn't work yet <a href=\"https://www.google.com/\">Take the Survey:</a> </div>\n         ),\n        asMessage: true,\n      }\n   ];\n   return steps\n}\n\n\nfunction App() {\n  return (\n     <div className=\"App\">\n         <Router >\n\n         <Switch>\n          <Route path=\"/blind/generate\">\n            <div>\n      <ChatBot width=\"100%\" botAvatar='svgtopng/robot 3.png' userAvatar='svgtopng/happy 2.png' enableMobileAutoFocus='true' steps={stepsfrommodelblind(\"/generate_pipeline\")} headerComponent ={\n        <div class=\"header\"> \n        <img src=\"svgtopng/robot 1.png\" align=\"left\" />\n        <h1 style={{ fontSize: '36px', fontFamily: \"Suez One\"}}>Hi there!</h1>\n        <p style={{ fontSize: '16px', fontFamily: \"Open Sans\", paddingLeft : '6%' }}>Hi!  I am Eddie. I am a chatbot.</p></div>\n      }\n       contentStyle={{ height: '86vh' }} style={{ height: '100%' }} botDelay={0} userDelay={50} />\n      </div>\n          </Route>\n           </Switch>\n\n                  <Switch>\n          <Route path=\"/blind/retrieve\">\n            <div>\n      <ChatBot width=\"100%\" botAvatar='svgtopng/robot 3.png' userAvatar='svgtopng/happy 2.png' enableMobileAutoFocus='true' steps={stepsfrommodelblind(\"/retrieve\")} headerComponent ={\n        <div class=\"header\"> \n        <img src=\"svgtopng/robot 1.png\" align=\"left\" />\n        <h1 style={{ fontSize: '36px', fontFamily: \"Suez One\"}}>Hi there!</h1>\n        <p style={{ fontSize: '16px', fontFamily: \"Open Sans\", paddingLeft : '6%' }}>This is Eddie, I am a chatbot.</p></div>\n      }\n       contentStyle={{ height: '86vh' }} style={{ height: '100%' }} botDelay={0} userDelay={50} />\n      </div>\n          </Route>\n          </Switch>\n\n\n           <Switch>\n          <Route path=\"/generate\">\n            <div>\n      <ChatBot width=\"100%\" botAvatar='svgtopng/robot 3.png' userAvatar='svgtopng/happy 2.png' enableMobileAutoFocus='true' steps={stepsfrommodel(\"/generate_pipeline\")} headerComponent ={\n        <div class=\"header\"> \n        <img src=\"svgtopng/robot 1.png\" align=\"left\" />\n        <h1 style={{ fontSize: '36px', fontFamily: \"Suez One\"}}>Hi there!</h1>\n        <p style={{ fontSize: '16px', fontFamily: \"Open Sans\", paddingLeft : '6%' }}>Hi!  I am Eddie. I can make jokes.</p></div>\n      }\n       contentStyle={{ height: '86vh' }} style={{ height: '100%' }} botDelay={0} userDelay={50} />\n      </div>\n          </Route>\n           </Switch>\n\n                  <Switch>\n          <Route path=\"/retrieve\">\n            <div>\n      <ChatBot width=\"100%\" botAvatar='svgtopng/robot 3.png' userAvatar='svgtopng/happy 2.png' enableMobileAutoFocus='true' steps={stepsfrommodel(\"/retrieve\")} headerComponent ={\n        <div class=\"header\"> \n        <img src=\"svgtopng/robot 1.png\" align=\"left\" />\n        <h1 style={{ fontSize: '36px', fontFamily: \"Suez One\"}}>Hi there!</h1>\n        <p style={{ fontSize: '16px', fontFamily: \"Open Sans\", paddingLeft : '6%' }}>This is Eddie. I can make jokes.</p></div>\n      }\n       contentStyle={{ height: '86vh' }} style={{ height: '100%' }} botDelay={0} userDelay={50} />\n      </div>\n          </Route>\n          </Switch>\n\n                  <Switch>\n         <Route exact path = \"/evaluation_process\" component={EvaluationProcess}/>\n         </Switch>\n       \n\n         <Switch>\n         <Route exact path = \"/\" component={Home}/>\n         </Switch>\n      </Router>\n     </div>\n  );\n}\n\n// function Bot() {\n//   return (\n//       <div>\n//       <ChatBot width=\"100%\" botAvatar='svgtopng/robot 3.png' userAvatar='svgtopng/happy 2.png' enableMobileAutoFocus='true' steps={steps} headerComponent ={\n//         <div class=\"header\"> \n//         <img src=\"svgtopng/robot 1.png\" align=\"left\" />\n//         <h1 style={{ fontSize: '36px', fontFamily: \"Suez One\"}}>Hi there!</h1>\n//         <p style={{ fontSize: '16px', fontFamily: \"Open Sans\", paddingLeft : '6%' }}>This is Eddie, I am a chatbot. I can help with xxx</p></div>\n//       }\n      \n\n//        contentStyle={{ height: '86vh' }} style={{ height: '100%' }} botDelay={0} userDelay={50} />\n//       </div>\n//   );\n// }\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider } from 'styled-components';\n\nconst theme =  {\n    background: '#f5f8fb',\n    fontFamily: 'Helvetica Neue',\n    headerBgColor: '#136259',\n    headerFontColor: '#fff',\n    headerFontSize: '20px',\n    botBubbleColor: '#ededed',\n    botFontSize: '500px',\n    botFontColor: '#4a4a4a',\n    userBubbleColor: '#bbf2c8',\n    userFontColor: '#4a4a4a',\n    \n}\n\n\n\n\nReactDOM.render(\n\t<ThemeProvider theme={theme}>\n    \t<App />\n    </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}